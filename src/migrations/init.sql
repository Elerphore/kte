-- CREATE DATABASE develop;

create table discounts(
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    discount_value double precision
);

insert into discounts(discount_value) values (2), (4), (8);

create table customers(
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name varchar(45) unique,
    discount_1 integer,
    discount_2 integer,

    constraint fk_discount1 foreign key (discount_1) references discounts(id) on delete cascade on update cascade,
    constraint fk_discount2 foreign key (discount_2) references discounts(id) on delete cascade on update cascade
);

insert into customers(name, discount_1, discount_2) values ('customer_1', null, null), ('customer_2', 1, null), ('customer_2', 2, 3);

create table storeitems(
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    storeitem_name varchar(45) not null,
    price double precision not null,
    description varchar(200) not null DEFAULT '',
    average_rating double precision default 0 not null,
    discount_id integer,

    constraint fk_discount1 foreign key (discount_id) references discounts(id) on delete cascade on update cascade
);

drop table storeitems;

insert into storeitems(storeitem_name, price) values ('Яблоко', 11), ('Банан', 25), ('Груша', 16);


-- STATISTICS

create table statistics (
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    statistic_type integer,
    storeitem_id integer,
    customer_id integer,
    total_price double precision,
    discount_sum double precision,

    constraint fk_storeitem foreign key (storeitem_id) references storeitems(id) on delete cascade on update cascade,
    constraint fk_customer foreign key (customer_id) references customers(id) on delete cascade on update cascade
);


drop table store_item_customer_rating;

create table store_item_customer_rating(
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    customer_id integer,
    storeitem_id integer,
    rating double precision,

    constraint fk_storeitem foreign key (storeitem_id) references storeitems(id) on delete cascade on update cascade
);

insert into
    store_item_customer_rating(customer_id, storeitem_id, rating)
values
    (1, 1, 1),
    (2, 2, 2),
    (3, 3, 3),
    (1, 1, 4),
    (2, 2, 5),
    (3, 3, 1);

create table orders(
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    customer_id integer,
    create_date date,
    discount_sum double precision,
    total_price double precision,
    order_number varchar(10)
);

create table order_storeitem(
    id integer PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    order_id integer,
    storeitem_id integer,
    amount integer,
    price double precision,
    discount double precision,

    constraint fk_order foreign key (order_id) references orders(id) on delete cascade on update cascade,
    constraint fk_storeitem foreign key (storeitem_id) references storeitems(id) on delete cascade on update cascade
);

drop table order_storeitem;
